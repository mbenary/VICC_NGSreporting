[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "An International Landscape of Cancer NGS Reporting Practices",
    "section": "",
    "text": "data |&gt; \n  select(continent, ID) |&gt; \n  distinct() |&gt; \n  count(continent) |&gt; \n  pivot_wider(names_from = \"continent\", values_from = \"n\") -&gt; nrResp\npalContinents &lt;- c(Europe = \"#283F46\", `North America` = \"#3aada8\", Other = \"gray\", Worldwide = \"#8B0000\")\n\ntextSize &lt;- 24\ncutoff &lt;- 0.75"
  },
  {
    "objectID": "index.html#row",
    "href": "index.html#row",
    "title": "An International Landscape of Cancer NGS Reporting Practices",
    "section": "Row",
    "text": "Row\n\nGlobal representation of survey responses\n\ndata |&gt; \n  select(region, ID, continent) |&gt; \n  distinct() |&gt; \n  mutate(region = ifelse(region == \"UK\", \"United Kingdom\", region)) |&gt; \n  mutate(region = ifelse(region == \"USA\", \"United States of America\", region)) |&gt; \n  group_by(region) |&gt; \n  count() -&gt; sum.country\n\nsf::sf_use_s2(FALSE)\n\nSpherical geometry (s2) switched off\n\nworld &lt;- rnaturalearth::ne_countries(scale = \"small\", returnclass = \"sf\")\nworld |&gt; \n  cbind(st_coordinates(st_centroid(world$geometry))) |&gt; \n  mutate(region = name) |&gt; \n  left_join(sum.country) |&gt; \n#  leaflet::leaflet() |&gt; \n#  addTiles() |&gt; \n#  setView(lat = 10, lng = 0, zoom = 2) %&gt;%\n#  addPolygons(fillColor = ~ n, stroke = FALSE)\n#\n  ggplot() + geom_sf(aes(fill = n)) +\n  scale_fill_continuous(low=\"thistle2\", high=\"darkred\", \n                        guide=\"colorbar\",na.value=\"lightgray\", \n                        name=\"# Responses\",\n                        breaks=seq(0, 20, by = 5)) +\n  geom_label_repel(data = world |&gt; \n                     cbind(st_coordinates(st_centroid(world$geometry))) |&gt; \n                     mutate(region = name) |&gt; \n                     left_join(sum.country) |&gt; filter(n &gt; 1) ,aes(X, Y, label = n), \n                   size = textSize/2, nudge_x = -5, nudge_y = -1) +\n  labs(x=\"\", y=\"\") + \n  theme_pubr(base_size = textSize, legend = \"bottom\") -&gt; plot.countries\n\nWarning in st_centroid.sfc(world$geometry): st_centroid does not give correct\ncentroids for longitude/latitude data\n\n\nJoining with `by = join_by(region)`\n\n\nWarning in st_centroid.sfc(world$geometry): st_centroid does not give correct\ncentroids for longitude/latitude data\n\n\nJoining with `by = join_by(region)`\n\n# add bar-plot with country not given\nsum.country |&gt; \n  filter(is.na(region)) |&gt; \n  mutate(region = str_replace_na(\"Country not specified\")) |&gt; \n  pivot_wider(names_from = \"region\", values_from = \"n\")-&gt; na.region\n\nplot.countries +\n  annotate(\"table\", x = -180, y = -70, label = list(cbind(na.region))) +\n  ggpubr::theme_transparent() +\n  theme(base_size = textSize, legend.position = \"bottom\") -&gt; plot.countries\n\nplot.countries\n\nWarning in plot_theme(plot): The `base_size` theme element is not defined in\nthe element hierarchy.\n\n\n\n\n\nOverview of survey responses across the globe. Most respondents represented laboratories in North America (n = 34 ) and Europe (n = 35 ), with additional responses from other countries (n = 17 ).\n\n\n\n#plotly::ggplotly(plot.countries)\n#ggsave(\"figures/overviewParticipants.png\", width = 14, height = 10.5, dpi = 600)"
  },
  {
    "objectID": "index.html#row-1",
    "href": "index.html#row-1",
    "title": "An International Landscape of Cancer NGS Reporting Practices",
    "section": "Row",
    "text": "Row\n\nTypes of tumors analysed\n\ncancer.factor &lt;- rev(c(\"Solid Tumor\", \"Hematologic Malignancies\", \n                       \"Both\", \"Both (only pediatric cancer)\", \"Other\", \"Not specified\"))\ndata |&gt; \n  filter(name == \"cancer_type\") |&gt; \n  select(ID, value) |&gt; \n  distinct() |&gt; \n  group_by(value) |&gt; \n  replace_na(list(value = \"Not specified\")) |&gt; \n  mutate(value = ifelse(value %in% cancer.factor, value, \"Other\")) |&gt; \n  count() |&gt; \n  mutate(cancer_type = factor(value, levels = cancer.factor)) |&gt; \n  filter(cancer_type != \"Not specified\") |&gt; \n  ggbarplot(x = \"cancer_type\", y = \"n\", fill = \"grey23\", \n            ylab = \"# Responses\", xlab = \"\", rotate = T) +\n  #scale_fill_continuous(low=\"thistle2\", high=\"darkred\") +\n  theme_pubr(base_size = textSize/2) +\n  theme(legend.position = \"none\") -&gt; plot.cancer\nplotly::ggplotly(plot.cancer)\n\n\n\n\n\n\n\nBackground of participants\nHistogram of participant work settings at a clinical, commercial, and/or academic setting.\n\norg.factor &lt;- c(\"Clinical/Hospital Laboratory\", \"Commercial Laboratory\", \"Academic/Research Laboratory\", \"Other\")\ndata |&gt; \n  filter(name == \"organization\") |&gt; \n  select(ID, name, value) |&gt; \n  distinct() |&gt; \n  group_by(ID) |&gt; \n  mutate(org = 1:n()) |&gt; \n  mutate(org = paste0(\"org\", org, sep=\"\")) |&gt; \n  pivot_wider(names_from = org, values_from = value) |&gt; \n  select(-name) |&gt; \n  mutate(org1 = ifelse(org1 %in% org.factor, org1, \"Other\")) |&gt; \n  group_by(org1, org2) |&gt; \n  count() |&gt; \n  mutate(org2 = ifelse(is.na(org2), org1, org2)) |&gt;  \n  mutate(org1 = factor(org1, levels = org.factor),\n         org2 = factor(org2, levels = org.factor))  -&gt; sum.organization\n\ndata |&gt; \n  filter(name == \"organization\") |&gt; \n  select(ID, name, value) |&gt; \n  distinct() |&gt; \n  pivot_wider(names_from = name, values_from = value) |&gt; \n  unnest(organization) |&gt; \n  mutate(organization = ifelse(organization %in% org.factor, organization, \"Other\")) |&gt; \n  mutate(count = 1) |&gt; \n  pivot_wider(names_from = organization, values_from = count, values_fill = 0) -&gt; data.upset\n\nWarning: Values from `value` are not uniquely identified; output will contain list-cols.\n• Use `values_fn = list` to suppress this warning.\n• Use `values_fn = {summary_fun}` to summarise duplicates.\n• Use the following dplyr code to identify duplicates.\n  {data} |&gt;\n  dplyr::summarise(n = dplyr::n(), .by = c(ID, name)) |&gt;\n  dplyr::filter(n &gt; 1L)\n\ndata.upset[org.factor] &lt;- data.upset[org.factor] == 1\nupsetjs(sizingPolicy = upsetjsSizingPolicy()) |&gt; \n  fromDataFrame(data.upset |&gt; select(-ID)) |&gt; \n  generateDistinctIntersections() |&gt; \n  chartFontSizes(bar.label = paste0(as.character(textSize/2), \"px\"), set.label = paste0(as.character(textSize/2), \"px\"), axis.tick = paste0(as.character(textSize/2), \"px\"))"
  },
  {
    "objectID": "index.html#column",
    "href": "index.html#column",
    "title": "An International Landscape of Cancer NGS Reporting Practices",
    "section": "Column",
    "text": "Column\n\nGeneral Information on NGS analysis\n\ndata.essentiality |&gt; \n  filter(section == \"Overview\", continent == \"Worldwide\") |&gt; \n  arrange(normEssent) |&gt; \n  mutate(label = paste0(name, \", SE = \", round(normEssent, 2))) -&gt; orderOverview\n\ndata.essentiality |&gt; \n  filter(section == \"Overview\") |&gt; \n  mutate(name = factor(name, levels = orderOverview$name)) |&gt; \n  ggbarplot(x = \"name\", y = \"normEssent\", palette = palContinents, \n            fill = \"continent\", \n            rotate = T, \n            label = TRUE, lab.size = textSize/3, lab.nb.digits = 2, lab.pos = \"in\", lab.col = \"white\", \n            lab.vjust = 0.5, lab.hjust = 2,\n            xlab = \"\", ylab = \"Score of Essentiality\", position = position_dodge(0.9)) + \n#  ylim(-0.16, 1)+\n  geom_hline(yintercept = cutoff, color = \"#8B0000\", lty = \"dashed\", size = 2) +\n  theme_pubr(base_size = textSize*2) + \n  theme(legend.position = \"top\", legend.title=element_blank()) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: No shared levels found between `names(values)` of the manual scale and the\ndata's colour values.\n\n\n\n\n\nParticipants were asked whether each of the data elements above was considered essential on NGS reports. A score of essentiality was calculated from these responses and is displayed by region of respondent.\n\n\n\n\n\n\nOverview of variant reporting\n\ndata.essentiality |&gt; \n  filter(section == \"Variants\") |&gt; \n  filter(continent == \"Worldwide\") |&gt; \n  arrange(normEssent) |&gt; \n  mutate(label = paste0(name, \", SE = \", round(normEssent, 2))) -&gt; orderVariants\n\ndata.essentiality |&gt; \n  filter(section == \"Variants\") |&gt; \n  mutate(name = factor(name, levels = orderVariants$name)) |&gt; \n  ggbarplot(x = \"name\", y = \"normEssent\", palette = palContinents, \n            fill = \"continent\", \n            rotate = T, \n            label = TRUE, lab.size = textSize/3, lab.nb.digits = 2, lab.pos = \"in\", lab.col = \"white\", \n            lab.vjust = 0.5, lab.hjust = 2,\n            xlab = \"\", ylab = \"Score of Essentiality\", position = position_dodge(0.9)) + \n#  ylim(-0.16, 1)+\n  geom_hline(yintercept = cutoff, color = \"#8B0000\", lty = \"dashed\", size = 2) +\n  theme_pubr(base_size = textSize*2) + \n  theme(legend.position = \"top\", legend.title=element_blank()) \n\nWarning: No shared levels found between `names(values)` of the manual scale and the\ndata's colour values.\n\n\n\n\n\nParticipants were asked whether each of the data elements above was considered essential on NGS reports. A score of essentiality was calculated from these responses and is displayed by region of respondent.\n\n\n\n\n\n\nOverview of functional assessment\n\ndata.essentiality |&gt; \n  filter(section == \"Functional\") |&gt; \n  filter(continent == \"Worldwide\") |&gt; \n  arrange(normEssent) |&gt; \n  mutate(label = paste0(name, \", SE = \", round(normEssent, 2))) -&gt; orderFunctional\n\n\ndata.essentiality |&gt; \n  filter(section == \"Functional\") |&gt; \n  mutate(name = factor(name, levels = orderFunctional$name)) |&gt; \n  ggbarplot(x = \"name\", y = \"normEssent\", palette = palContinents, \n            fill = \"continent\", \n            rotate = T, \n            label = TRUE, lab.size = textSize/3, lab.nb.digits = 2, lab.pos = \"in\", lab.col = \"white\", \n            lab.vjust = 0.5, lab.hjust = 2,\n            xlab = \"\", ylab = \"Score of Essentiality\", position = position_dodge(0.9)) + \n  ylim(-0.16, 1)+\n  geom_hline(yintercept = cutoff, color = \"#8B0000\", lty = \"dashed\", size = 2) +\n  theme_pubr(base_size = textSize*2) + \n  theme(legend.position = \"top\", legend.title=element_blank()) \n\nWarning: No shared levels found between `names(values)` of the manual scale and the\ndata's colour values.\n\n\n\n\n\nParticipants were asked whether each of the data elements above was considered essential on NGS reports. A score of essentiality was calculated from these responses and is displayed by region of respondent.\n\n\n\n\n\n\nTreatment recommendations\n\ndata.essentiality |&gt; \n  filter(section == \"Treatment\") |&gt; \n  filter(continent == \"Worldwide\") |&gt; \n  arrange(normEssent) |&gt; \n  mutate(label = paste0(name, \", SE = \", round(normEssent, 2))) -&gt; orderTreatment\n\n\ndata.essentiality |&gt; \n  filter(section == \"Treatment\") |&gt; \n  mutate(name = factor(name, levels = orderTreatment$name)) |&gt; \n  ggbarplot(x = \"name\", y = \"normEssent\", palette = palContinents, \n            fill = \"continent\", \n            rotate = T, \n            label = TRUE, lab.size = textSize/3, lab.nb.digits = 2, lab.pos = \"in\", lab.col = \"white\", \n            lab.vjust = 0.5, lab.hjust = 2,\n            xlab = \"\", ylab = \"Score of Essentiality\", position = position_dodge(0.9)) + \n#  ylim(-0.16, 1)+\n  geom_hline(yintercept = cutoff, color = \"#8B0000\", lty = \"dashed\", size = 2) +\n  theme_pubr(base_size = textSize) +\n  theme(legend.position = \"top\", legend.title=element_blank()) \n\nWarning: No shared levels found between `names(values)` of the manual scale and the\ndata's colour values.\n\n\n\n\n\nParticipants were asked whether each of the data elements above was considered essential on NGS reports. A score of essentiality was calculated from these responses and is displayed by region of respondent.\n\n\n\n\n\n\nClinical trials\n\ndata.essentiality |&gt; \n  filter(group == \"clinical trial\") |&gt; \n  filter(continent == \"Worldwide\") |&gt; \n  arrange(normEssent) |&gt; \n  pull(name) -&gt; listPlot\n\n\ndata.essentiality |&gt; \n  filter(group == \"clinical trial\") |&gt; \n  mutate(name = factor(name, levels = listPlot)) |&gt; \n  ggbarplot(x = \"name\", y = \"normEssent\", palette = palContinents, \n            fill = \"continent\", \n            rotate = T, \n            label = TRUE, lab.size = textSize/3, lab.nb.digits = 2, lab.pos = \"in\", lab.col = \"white\", \n            lab.vjust = 0.5, lab.hjust = 2,\n            xlab = \"\", ylab = \"Score of Essentiality\", position = position_dodge(0.9)) + \n#  ylim(-0.16, 1)+\n  geom_hline(yintercept = cutoff, color = \"#8B0000\", lty = \"dashed\", size = 2) +\n  theme_pubr(base_size = textSize*2) + \n  theme(legend.position = \"top\", legend.title=element_blank())\n\nWarning: No shared levels found between `names(values)` of the manual scale and the\ndata's colour values.\n\n\n\n\n\nParticipants were asked whether each of the data elements above was considered essential on NGS reports. A score of essentiality was calculated from these responses and is displayed by region of respondent."
  },
  {
    "objectID": "index.html#row-2",
    "href": "index.html#row-2",
    "title": "An International Landscape of Cancer NGS Reporting Practices",
    "section": "Row",
    "text": "Row\n\nresponses.reported &lt;- c(\"No Response\", \"Not Reported\", \"Reported\")\ndata |&gt; \n  filter(class == \"Report\") |&gt; \n  group_by(continent, name, group, section) |&gt; \n  count(value) |&gt; \n  pivot_wider(names_from = value, values_from = n) |&gt; \n  left_join(nrResp |&gt; pivot_longer(everything(), names_to = \"continent\")) |&gt; \n  mutate(sumResponses = sum(Reported, `Not Reported`, na.rm = T),\n         `No Response` = value - sumResponses) |&gt; \n  mutate(percReported = Reported / sumResponses) -&gt; data.reported\n\nJoining with `by = join_by(continent)`\n\ndata |&gt; \n  filter(class == \"Report\") |&gt; \n  group_by(name, group, section) |&gt; \n  count(value) |&gt; \n  pivot_wider(names_from = value, values_from = n) |&gt; \n  mutate(value = nrResp |&gt; as_vector() |&gt; sum()) |&gt; \n  mutate(sumResponses = sum(Reported, `Not Reported`, na.rm = T),\n         `No Response` = value - sumResponses) |&gt; \n  mutate(percReported = Reported / sumResponses) |&gt; \n  mutate(continent = \"Worldwide\") |&gt; \n  bind_rows(data.reported) -&gt; data.reported\n\n\nGeneral Information on NGS analysis\n\ndata.essentiality |&gt; \n  filter(section == \"Overview\") |&gt; \n  left_join(data.reported, by = c(\"group\", \"section\", \"name\", \"continent\")) |&gt; \n  mutate(label = ifelse((continent == \"Worldwide\" & normEssent &gt;= cutoff), name, \"\")) |&gt; \n  plotly::plot_ly(x = ~normEssent, y = ~percReported, colors=palContinents, type = 'scatter', mode = 'markers',\n  # Hover text:\n  text = ~paste(name),\n  color = ~continent, size = 4\n) |&gt; \n  plotly::layout(showlegend = FALSE, \n                 xaxis = list(title = \"Score of Essentiality (SE)\"), \n                 yaxis = list(title = \"% Reported\"),\n                 shapes = list(list(\n    type = \"line\", \n    x0 = 0, \n    x1 = 1, \n    xref = \"x\",\n    y0 = 0, \n    y1 = 1,\n    yref = \"y\",\n    line = list(color = \"grey23\", dash=\"dashdot\")\n  ))) -&gt; p1\n\ndata.reported |&gt; \n  filter(section == \"Overview\") |&gt; \n  pivot_longer(cols = responses.reported, values_to = \"count\", names_to = \"report\") |&gt; \n  mutate(percent = count/value) |&gt; \n  mutate(name = factor(name, levels = rev(orderOverview$name))) |&gt; \n  ggbarplot(y = \"percent\", x = \"continent\", fill = \"continent\", alpha = \"report\", facet.by = \"name\", palette = palContinents, ncol = 1,\n            rotate = T, order = names(palContinents), panel.labs = list(name = rev(orderOverview$label)),\n            ylab = \"% Reported\", xlab = \"\") + \n  theme_pubr(base_size = textSize/2) +\n  theme(legend.position = \"none\") -&gt; p2\n\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(responses.reported)\n\n  # Now:\n  data %&gt;% select(all_of(responses.reported))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\nplotly::subplot(margin = 0.07, p1, plotly::ggplotly(p2) |&gt; plotly::layout(showlegend = FALSE, xaxis = list(title = \"% Reported\")), titleX = TRUE, titleY = TRUE)\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\nWarning: Can only have one: config\n\n\n\n\n\n\n\n\nOverview of variant reporting\n\ndata.essentiality |&gt; \n  filter(section == \"Variants\") |&gt; \n  left_join(data.reported, by = c(\"group\", \"section\", \"name\", \"continent\")) |&gt; \n  mutate(label = ifelse((continent == \"Worldwide\" & normEssent &gt;= cutoff), name, \"\")) |&gt; \n  plotly::plot_ly(x = ~normEssent, y = ~percReported, colors=palContinents, type = 'scatter', mode = 'markers',\n  # Hover text:\n  text = ~paste(name),\n  color = ~continent, size = 4\n) |&gt; \n  plotly::layout(showlegend = FALSE, \n                 xaxis = list(title = \"Score of Essentiality (SE)\"), \n                 yaxis = list(title = \"% Reported\"),\n                 shapes = list(list(\n    type = \"line\", \n    x0 = 0, \n    x1 = 1, \n    xref = \"x\",\n    y0 = 0, \n    y1 = 1,\n    yref = \"y\",\n    line = list(color = \"grey23\", dash=\"dashdot\")\n  ))) -&gt; p1\n\ndata.reported |&gt; \n  filter(section == \"Variants\") |&gt; \n  pivot_longer(cols = responses.reported, values_to = \"count\", names_to = \"report\") |&gt; \n  mutate(percent = count/value) |&gt; \n  mutate(name = factor(name, levels = rev(orderVariants$name))) |&gt; \n  ggbarplot(y = \"percent\", x = \"continent\", fill = \"continent\", alpha = \"report\", facet.by = \"name\", palette = palContinents, ncol = 1,\n            rotate = T, order = names(palContinents), panel.labs = list(name = rev(orderVariants$label)),\n            ylab = \"% Reported\", xlab = \"\") + \n  theme_pubr(base_size = textSize/2) +\n  theme(legend.position = \"none\") -&gt; p2\n\nplotly::subplot(margin = 0.07, p1, plotly::ggplotly(p2) |&gt; plotly::layout(showlegend = FALSE, xaxis = list(title = \"% Reported\")), titleX = TRUE, titleY = TRUE)\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\nWarning: Can only have one: config\n\n\n\n\n\n\n\n\nOverview of functional assessment\n\ndata.essentiality |&gt; \n  filter(section == \"Functional\") |&gt; \n  left_join(data.reported, by = c(\"group\", \"section\", \"name\", \"continent\")) |&gt; \n  mutate(label = ifelse((continent == \"Worldwide\" & normEssent &gt;= cutoff), name, \"\")) |&gt; \n  plotly::plot_ly(x = ~normEssent, y = ~percReported, colors=palContinents, type = 'scatter', mode = 'markers',\n  # Hover text:\n  text = ~paste(name),\n  color = ~continent, size = 4\n) |&gt; \n  plotly::layout(showlegend = FALSE, \n                 xaxis = list(title = \"Score of Essentiality (SE)\"), \n                 yaxis = list(title = \"% Reported\"),\n                 shapes = list(list(\n    type = \"line\", \n    x0 = 0, \n    x1 = 1, \n    xref = \"x\",\n    y0 = 0, \n    y1 = 1,\n    yref = \"y\",\n    line = list(color = \"grey23\", dash=\"dashdot\")\n  ))) -&gt; p1\n\ndata.reported |&gt; \n  filter(section == \"Functional\") |&gt; \n  pivot_longer(cols = responses.reported, values_to = \"count\", names_to = \"report\") |&gt; \n  mutate(percent = count/value) |&gt; \n  mutate(name = factor(name, levels = rev(orderFunctional$name))) |&gt; \n  ggbarplot(y = \"percent\", x = \"continent\", fill = \"continent\", alpha = \"report\", facet.by = \"name\", palette = palContinents, ncol = 1,\n            rotate = T, order = names(palContinents), panel.labs = list(name = rev(orderFunctional$label)),\n            ylab = \"% Reported\", xlab = \"\") + \n  theme_pubr(base_size = textSize/2) +\n  theme(legend.position = \"none\") -&gt; p2\n\nplotly::subplot(margin = 0.07, p1, plotly::ggplotly(p2) |&gt; plotly::layout(showlegend = FALSE, xaxis = list(title = \"% Reported\")), titleX = TRUE, titleY = TRUE)\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\nWarning: Can only have one: config\n\n\n\n\n\n\n\n\nTreatment recommendations\n\ndata.essentiality |&gt; \n  filter(section == \"Treatment\") |&gt; \n  left_join(data.reported, by = c(\"group\", \"section\", \"name\", \"continent\")) |&gt; \n  mutate(label = ifelse((continent == \"Worldwide\" & normEssent &gt;= cutoff), name, \"\")) |&gt; \n  plotly::plot_ly(x = ~normEssent, y = ~percReported, colors=palContinents, type = 'scatter', mode = 'markers',\n  # Hover text:\n  text = ~paste(name),\n  color = ~continent, size = 4\n) |&gt; \n  plotly::layout(showlegend = FALSE, \n                 xaxis = list(title = \"Score of Essentiality (SE)\"), \n                 yaxis = list(title = \"% Reported\"),\n                 shapes = list(list(\n    type = \"line\", \n    x0 = 0, \n    x1 = 1, \n    xref = \"x\",\n    y0 = 0, \n    y1 = 1,\n    yref = \"y\",\n    line = list(color = \"grey23\", dash=\"dashdot\")\n  ))) -&gt; p1\n\ndata.reported |&gt; \n  filter(section == \"Treatment\") |&gt; \n  pivot_longer(cols = responses.reported, values_to = \"count\", names_to = \"report\") |&gt; \n  mutate(percent = count/value) |&gt; \n  mutate(name = factor(name, levels = rev(orderTreatment$name))) |&gt; \n  ggbarplot(y = \"percent\", x = \"continent\", fill = \"continent\", alpha = \"report\", facet.by = \"name\", palette = palContinents, ncol = 1,\n            rotate = T, order = names(palContinents), panel.labs = list(name = rev(orderTreatment$label)),\n            ylab = \"% Reported\", xlab = \"\") +\n  theme_pubr(base_size = textSize/2) +\n  theme(legend.position = \"None\") -&gt;p2\n\nplotly::subplot(margin = 0.07, p1, plotly::ggplotly(p2) |&gt; plotly::layout(showlegend = FALSE, xaxis = list(title = \"% Reported\")), titleX = TRUE, titleY = TRUE)\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\nWarning: No shared levels found between `names(values)` of the manual scale and the\ndata's colour values.\n\n\nWarning: Can only have one: config"
  },
  {
    "objectID": "index.html#column-1",
    "href": "index.html#column-1",
    "title": "An International Landscape of Cancer NGS Reporting Practices",
    "section": "Column",
    "text": "Column\n\nDistribution of Participants\n\nsum.country |&gt; \n  arrange(desc(n)) |&gt; \n  datatable(caption = \"Overview of the number of survey responses for each country.\", colnames = c('Country' = 'region', '# Participants' = 'n'), rownames = F)"
  },
  {
    "objectID": "index.html#column-2",
    "href": "index.html#column-2",
    "title": "An International Landscape of Cancer NGS Reporting Practices",
    "section": "Column",
    "text": "Column\n\nCalculation for Score of Essentiality\n\ndata.essentiality |&gt; \n  datatable(caption = \"Overview of the essentiality fore each element in the survey calculated by continent.\", colnames = c('Survey section'='section', 'Survey group' = 'group', 'Survey element' = 'name', '# Responses' = 'totEssent', 'Sum of Essentiality' = 'sumEssent', 'Score of Essentiality (SE)' = 'normEssent', 'Continent' = 'continent' ) , rownames = F) |&gt; \n  formatRound('Score of Essentiality (SE)', 2)"
  }
]